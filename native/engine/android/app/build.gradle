import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'
//add kotlin plugin

apply plugin: 'org.jetbrains.kotlin.android'
RES_PATH = RES_PATH.replace("\\", "/")
COCOS_ENGINE_PATH = COCOS_ENGINE_PATH.replace("\\", "/")

buildDir = "${RES_PATH}/proj/build/$project.name"
android {
    compileSdkVersion PROP_COMPILE_SDK_VERSION.toInteger()
    buildToolsVersion PROP_BUILD_TOOLS_VERSION
    ndkPath PROP_NDK_PATH


    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId APPLICATION_ID
        minSdkVersion PROP_MIN_SDK_VERSION
        targetSdkVersion PROP_TARGET_SDK_VERSION
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                targets "cocos"
                arguments "-DRES_DIR=${RES_PATH}", "-DCOCOS_X_PATH=${COCOS_ENGINE_PATH}", "-DANDROID_STL=c++_static", "-DANDROID_TOOLCHAIN=clang", "-DANDROID_ARM_NEON=TRUE", "-DANDROID_LD=gold"
                cppFlags "-frtti -fexceptions -fsigned-char"
            }
            ndk { abiFilters PROP_APP_ABI.split(':') }
        }

        manifestPlaceholders["PN_PROJECT_ID"] = "2ac9501b-bde1-4e09-9c1a-403768db896b"
        manifestPlaceholders["PN_PROJECT_CLIENT_KEY"] =
                "c4CqHS0nbdVBthI1XDw3jky0OoFj3Yu3YcgKhNSk"
        manifestPlaceholders["PN_APP_ID"] = "f53fe952-6562-4cd5-b1bc-1ca96a0c8e48"

    }

    sourceSets.main {
        java.srcDirs "../src", "src"
        res.srcDirs "../res", 'res'
        jniLibs.srcDirs "../libs", 'libs'
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "${RES_PATH}/data"
        jniLibs {
            // Vulkan validation layer
            // srcDir "${android.ndkDirectory}/sources/third_party/vulkan/src/build-android/jniLibs"
        }
    }

    externalNativeBuild {
        cmake {
            path "../CMakeLists.txt"
            buildStagingDirectory "${RES_PATH}/proj/build"
        }
    }

    signingConfigs {

       release {
            if (project.hasProperty("RELEASE_STORE_FILE") && !RELEASE_STORE_FILE.isEmpty()) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
            // resValue  "string", "app_name", PROP_APP_NAME
        }

        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            // resValue  "string", "app_name", "${PROP_APP_NAME}-dbg"
            // applicationIdSuffix ".debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: '../libs', include: ['*.jar','*.aar'])
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    implementation fileTree(dir: "${COCOS_ENGINE_PATH}/cocos/platform/android/java/libs", include: ['*.jar'])
    implementation project(':libservice')
    implementation project(':libcocos')

    def authVersion = "0.12.0"
//     def connectVersion = "0.11.1"
    implementation("network.particle:base-service:$authVersion")
    implementation("network.particle:auth-service:$authVersion")
    // implementation("network.particle:wallet-service:$authVersion")
    // implementation("network.particle:api-service:$authVersion")

//     implementation("network.particle:connect-common:$connectVersion")
//     implementation("network.particle:connect:$connectVersion")
//     implementation("network.particle:connect-evm-adapter:$connectVersion")
//     implementation("network.particle:connect-solana-adapter:$connectVersion")
//     implementation("network.particle:connect-phantom-adapter:$connectVersion")
//     implementation("network.particle:connect-wallet-connect-adapter:$connectVersion")
    implementation("org.jetbrains.kotlin:kotlin-stdlib:1.6.0")
    implementation("com.blankj:utilcodex:1.31.0")
    implementation("commons-codec:commons-codec:1.15")
    implementation("com.google.code.gson:gson:2.8.5")
    implementation("com.google.android.material:material:1.5.0")
    implementation("androidx.appcompat:appcompat:1.6.1")
}


buildscript {

    repositories {
        google()
        mavenCentral()
        // jcenter() // keeped as anchor, will be removed soon
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.0")

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
